{"version":3,"sources":["AfterSuccessfulLoginScreen/DisplayResults/DisplayEachRow/DisplayEachRow.module.css","AfterSuccessfulLoginScreen/DisplayingData/DisplayEachItem/DisplayEachItem.module.css","AfterSuccessfulLoginScreen/DisplayingData/ShowPositionButtons/ShowPositionButton.module.css","LoginScreen/LoginScreen.module.css","AfterSuccessfulLoginScreen/LoginSuccess/LoginSuccess.module.css","NonReactBasedFunctions/fetchData.js","NonReactBasedFunctions/magicData.js","NonReactBasedFunctions/LoginDetailsCheck.js","LoginScreen/LoginScreen.js","AfterSuccessfulLoginScreen/NavBar/NavBarComponent.js","AfterSuccessfulLoginScreen/DisplayingData/DisplayEachItem/DisplayEachItem.js","AfterSuccessfulLoginScreen/DisplayingData/ShowPositionButtons/ShowPositionButton.js","store/storeIndex.js","AfterSuccessfulLoginScreen/DisplayingData/DisplayingData.js","AfterSuccessfulLoginScreen/LoginSuccess/LoginSuccess.js","AfterSuccessfulLoginScreen/DisplayResults/DisplayEachRow/DisplayEachRow.js","AfterSuccessfulLoginScreen/DisplayResults/DisplayResults.js","AfterSuccessfulLoginScreen/AfterSuccessfulLoginScreen.js","App.js","index.js"],"names":["module","exports","fetchData","a","fetch","response","ok","status","json","result","console","log","LoginDetailsCheck","obtainedUser","obtainedPassword","loginDetails","filteredUser","filter","eachUser","username","length","password","bool","username_wrong","LoginScreen","props","inputUser","useRef","inputPassword","className","classes","formContainer","boxshadow","form","onSubmit","e","preventDefault","user","current","value","pass","focus","submitHandler","bind","htmlFor","id","ref","placeholder","required","type","colSpan","style","textAlign","NavBarComponent","Navbar","bg","variant","Container","Brand","Nav","Link","as","to","NavItem","eventkey","Button","onClick","logoutHandler","DisplayEachItem","useSelector","state","useState","label","setLabel","useEffect","loggedInUserAllDetails","loggedIn","itemInfo","first","second","third","common_row","src","image","alt","imageStyle","description","dishName","position","button","ShowPositionButton","buttonsContainer","buttonClick","currentNumber","active","dataSlice","createSlice","name","initialState","reducers","setPositionHandler","action","index","findIndex","payload","activePosition","dataActions","actions","store","configureStore","reducer","DisplayingData","dispatch","useDispatch","setPosition","eachItemButtonClickHandle","pos","data","map","eachItem","LoginSuccess","common","DisplayEachRow","getLoggedInData","image_container","idForRef","points","DisplayResults","finalScores","setFinalScores","dataWithPointsField","point","Array","fill","sortedResult","updatedField","sort","firstDish","secondDish","AfterSuccessfulLoginScreen","path","element","App","navigate","useNavigate","setData","gotError","setErrorState","loggedInUser","setLoggedInUser","fetchDishData","useCallback","receivedData","width","height","display","alignItems","obtainedPass","checkData","window","alert","ReactDOM","render","document","getElementById"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,WAAa,mCAAmC,WAAa,mCAAmC,gBAAkB,wCAAwC,YAAc,oCAAoC,SAAW,iCAAiC,KAAO,6BAA6B,KAAO,6BAA6B,KAAO,+B,mBCAzVD,EAAOC,QAAU,CAAC,WAAa,oCAAoC,WAAa,oCAAoC,YAAc,qCAAqC,SAAW,kCAAkC,KAAO,8BAA8B,KAAO,8BAA8B,KAAO,gC,mBCArSD,EAAOC,QAAU,CAAC,iBAAmB,6CAA6C,OAAS,qC,mBCA3FD,EAAOC,QAAU,CAAC,cAAgB,mCAAmC,UAAY,+BAA+B,KAAO,4B,mBCAvHD,EAAOC,QAAU,CAAC,OAAS,+B,yHCGrBC,EAAS,uCAAG,8BAAAC,EAAA,+EAEaC,MCJZ,uEDED,WAEJC,EAFI,QAGIC,GAHJ,sBAIAD,EAASE,OAJT,uBAMWF,EAASG,OANpB,cAMJC,EANI,yBAOHA,GAPG,yCAUVC,QAAQC,MAVE,kFAAH,qDAeAT,IEDAU,EAhBW,SAACC,EAAcC,EAAkBC,GAEvD,IAAMC,EAAeD,EAAaE,QAAO,SAAAC,GACrC,OAAOA,EAASC,WAAaN,KAEjC,OAA4B,IAAxBG,EAAaI,OACTJ,EAAa,GAAGK,WAAaP,EACtB,CAAEQ,MAAM,EAAMC,gBAAgB,GAElC,CAAED,MAAM,EAAOC,gBAAgB,GAGnC,CAAED,MAAM,EAAOC,gBAAgB,I,+BC8C3BC,EAvDK,SAACC,GAEjB,IAAMC,EAAYC,iBAAO,MACnBC,EAAgBD,iBAAO,MAoB7B,OACI,qBAAKE,UAAWC,IAAQC,cAAxB,SACI,qBAAKF,UAAWC,IAAQE,UAAxB,SACI,uBAAMH,UAAWC,IAAQG,KAAMC,SArBnB,SAACC,GACrBA,EAAEC,iBACF,IAAMC,EAAOX,EAAUY,QAAQC,MACzBC,EAAOZ,EAAcU,QAAQC,MACf,IAAhBF,EAAKjB,QAAgC,IAAhBoB,EAAKpB,OACN,IAAhBiB,EAAKjB,OACLM,EAAUY,QAAQG,QAGlBb,EAAcU,QAAQG,QAI1BhB,EAAMiB,cAAcL,EAAMG,IAQmCG,K,WAAzD,UACI,uCACA,uBACA,gCACI,kCACI,+BACI,6BAAI,uBAAOC,QAAQ,WAAf,+BACJ,6BAAI,uBAAOC,GAAG,WAAWC,IAAKpB,EAAWqB,YAAY,iBAAiBC,UAAQ,SAElF,+BACI,6BAAI,uBAAOJ,QAAQ,WAAf,+BAEJ,6BAAI,uBAAOC,GAAG,WAAWC,IAAKlB,EAAeqB,KAAK,WAAWF,YAAY,iBAAiBC,UAAQ,SAEtG,6BACI,oBAAIE,QAAQ,IAAIC,MAAO,CAAEC,UAAW,UAApC,SACI,wBAAQH,KAAK,SAAb,4BAKhB,+B,wDCpBLI,EArBS,SAAC5B,GACrB,OACI,mCACI,cAAC6B,EAAA,EAAD,CAAQC,GAAG,OAAOC,QAAQ,OAA1B,SACI,eAACC,EAAA,EAAD,WACI,cAACH,EAAA,EAAOI,MAAR,UAAc,cAACC,EAAA,EAAIC,KAAL,CAAUC,GAAID,IAAME,GAAG,QAAvB,wBACd,eAACH,EAAA,EAAD,CAAK9B,UAAU,UAAf,UACI,cAACkC,EAAA,EAAD,CAASC,SAAU,EAAnB,SACI,cAACL,EAAA,EAAIC,KAAL,CAAUC,GAAID,IAAME,GAAG,UAAvB,yBAEJ,cAACC,EAAA,EAAD,CAASC,SAAU,EAAnB,SACI,cAACL,EAAA,EAAIC,KAAL,CAAUC,GAAID,IAAME,GAAG,UAAvB,yBAGR,cAACG,EAAA,EAAD,CAAQT,QAAQ,iBAAiBU,QAASzC,EAAM0C,cAAhD,4B,gCCyBLC,EA3CS,SAAC3C,GAErB,IAAMV,EAAesD,aAAY,SAAAC,GAAK,OAAIA,KAE1C,EAA0BC,mBAAS,MAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAsBA,OAlBAC,qBAAU,WACN,IAAMC,EAAyB5D,EAAaE,QAAO,SAAAC,GAC/C,OAAOA,EAASC,WAAaM,EAAMmD,YAEnCnD,EAAMoD,SAAShC,KAAO8B,EAAuB,GAAGG,MAChDL,EAAS,KAEJhD,EAAMoD,SAAShC,KAAO8B,EAAuB,GAAGI,OACrDN,EAAS,KAEJhD,EAAMoD,SAAShC,KAAO8B,EAAuB,GAAGK,MACrDP,EAAS,KAGTA,EAAS,QAEd,CAAChD,EAAMoD,SAAShC,GAAI9B,EAAcU,EAAMmD,WAGvC,sBAAK/C,UAAWC,IAAQmD,WAAxB,UACI,qBAAKC,IAAKzD,EAAMoD,SAASM,MAAOC,IAAI,cAAcvD,UAAWC,IAAQuD,aACrE,sBAAKxD,UAAWC,IAAQwD,YAAxB,UACI,6BACK7D,EAAMoD,SAASU,WAEpB,4BACK9D,EAAMoD,SAASS,iBAGxB,wBAAQzD,UAAS,UAAKC,IAAQ0D,SAAb,YAAyB1D,IAAQ,MAAD,OAAO0C,IAAvC,KAAoDN,QAASzC,EAAMgE,OAAO9C,K,UAAWlB,EAAMoD,SAAShC,IAArH,SAA2H2B,GAAgB,e,0BC3BxIkB,EAbY,SAACjE,GACxB,OACI,sBAAKI,UAAWC,IAAQ6D,iBAAxB,UACI,+DAC+B,mBAAG9D,UAAU,uBAD5C,WAGA,wBAAQqC,QAASzC,EAAMmE,YAAYjD,KAAK,EAAM,GAAId,UAAmC,IAAxBJ,EAAMoE,cAAN,UAA+B/D,IAAQgE,QAAW,GAA/G,eACA,wBAAQ5B,QAASzC,EAAMmE,YAAYjD,KAAK,EAAM,GAAId,UAAmC,IAAxBJ,EAAMoE,cAAN,UAA+B/D,IAAQgE,QAAW,GAA/G,eACA,wBAAQ5B,QAASzC,EAAMmE,YAAYjD,KAAK,EAAM,GAAId,UAAmC,IAAxBJ,EAAMoE,cAAN,UAA+B/D,IAAQgE,QAAW,GAA/G,mB,QC2BNC,EAAYC,YAAY,CAC1BC,KAAM,gBACNC,aArCe,CACf,CACIrD,GAAI,EACJ1B,SAAU,QACVE,SAAU,QACVyD,MAAO,EACPC,OAAQ,EACRC,MAAO,GAEX,CACInC,GAAI,EACJ1B,SAAU,UACVE,SAAU,QACVyD,MAAO,EACPC,OAAQ,EACRC,MAAO,GAEX,CACInC,GAAI,EACJ1B,SAAU,QACVE,SAAU,QACVyD,MAAO,EACPC,OAAQ,EACRC,MAAO,GAEX,CACInC,GAAI,EACJ1B,SAAU,OACVE,SAAU,QACVyD,MAAO,EACPC,OAAQ,EACRC,MAAO,IAOXmB,SAAU,CACNC,mBADM,SACa9B,EAAO+B,GACtB,IAAMC,EAAQhC,EAAMiC,WAAU,SAAArF,GAC1B,OAAOA,EAASC,WAAakF,EAAOG,QAAQ5B,YAEV,IAAlCyB,EAAOG,QAAQC,iBACXnC,EAAMgC,GAAOvB,SAAWsB,EAAOG,QAAQ3D,KACvCyB,EAAMgC,GAAOvB,OAAS,GAEtBT,EAAMgC,GAAOtB,QAAUqB,EAAOG,QAAQ3D,KACtCyB,EAAMgC,GAAOtB,MAAQ,GAEzBV,EAAMgC,GAAOxB,MAAQuB,EAAOG,QAAQ3D,IAEF,IAAlCwD,EAAOG,QAAQC,iBACXnC,EAAMgC,GAAOxB,QAAUuB,EAAOG,QAAQ3D,KACtCyB,EAAMgC,GAAOxB,MAAQ,GAErBR,EAAMgC,GAAOtB,QAAUqB,EAAOG,QAAQ3D,KACtCyB,EAAMgC,GAAOtB,MAAQ,GAEzBV,EAAMgC,GAAOvB,OAASsB,EAAOG,QAAQ3D,IAEH,IAAlCwD,EAAOG,QAAQC,iBACXnC,EAAMgC,GAAOxB,QAAUuB,EAAOG,QAAQ3D,KACtCyB,EAAMgC,GAAOvB,OAAS,GAEtBT,EAAMgC,GAAOvB,SAAWsB,EAAOG,QAAQ3D,KACvCyB,EAAMgC,GAAOvB,OAAS,GAE1BT,EAAMgC,GAAOtB,MAAQqB,EAAOG,QAAQ3D,QAQvC6D,EAAcX,EAAUY,QAQtBC,EALHC,YAAe,CACvBC,QAASf,EAAUe,UClCRC,EAzCQ,SAACtF,GAEpB,IAAMuF,EAAWC,cACjB,EAAsC1C,mBAAS,GAA/C,mBAAOkC,EAAP,KAAuBS,EAAvB,KAWMC,EAA4B,SAACtE,GACR,IAAnB4D,IAKAO,EAASN,EAAYN,mBAAmB,CACpCvD,KACA+B,SAAUnD,EAAMmD,SAChB6B,oBAEJS,EAAY,KAIpB,OACI,qCACI,cAAC,EAAD,CAAoBtB,YAzBQ,SAACwB,GAKjCF,EAJIE,IAAQX,EAIAW,EAHI,IAuBkDvB,cAAeY,IAC7E,8BACKhF,EAAM4F,KAAKC,KAAI,SAAAC,GACZ,OAAO,cAAC,EAAD,CAA6C1C,SAAU0C,EAAU9B,OAAQ0B,EAA2BvC,SAAUnD,EAAMmD,UAApH,eAA8B2C,EAAS1E,c,iBC1BnD2E,EAbM,SAAC/F,GAClB,OACI,sBAAKI,UAAWC,IAAQ2F,OAAxB,UACI,sCACShG,EAAMmD,SADf,OAGA,wD,wBC+BG8C,EA/BQ,SAACjG,GAEpB,IAEMkG,EAFWtD,aAAY,SAAAC,GAAK,OAAIA,KAELrD,QAAO,SAAAC,GACpC,OAAOA,EAASC,WAAaM,EAAMmD,YAIvC,OACI,sBAAK/C,UAAS,UAAKC,IAAQmD,WAAb,YAA2BnD,IAAQ,MAAD,OAAOL,EAAM6E,MAAQ,KAArE,UACI,sBAAKzE,UAAWC,IAAQ8F,gBAAxB,UAEI,qBAAK1C,IAAKzD,EAAMoD,SAASM,MAAOC,IAAI,cAAcvD,UAAWC,IAAQuD,cAEnE5D,EAAMoG,WAAaF,EAAgB,GAAG7C,OAASrD,EAAMoG,WAAaF,EAAgB,GAAG5C,QAAUtD,EAAMoG,WAAaF,EAAgB,GAAG3C,QAAU,+BAAM,mBAAGnD,UAAU,2BAExK,sBAAKA,UAAWC,IAAQwD,YAAxB,UACI,6BACK7D,EAAMoD,SAASU,WAEpB,4BACK9D,EAAMoD,SAASS,iBAGxB,wBAAQzD,UAAWC,IAAQ0D,SAA3B,SAAsC/D,EAAMqG,aCsBzCC,EAnDQ,SAACtG,GAEpB,IAAMV,EAAesD,aAAY,SAAAC,GAAK,OAAIA,KAE1C,EAAsCC,mBAAS,IAA/C,mBAAOyD,EAAP,KAAoBC,EAApB,KAEMC,EAAsBzG,EAAM4F,KAAKC,KAAI,SAAAC,GACvC,OAAO,2BAAKA,GAAZ,IAAsBY,MAAO,OAiCjC,OA/BAzD,qBAAU,WACN,IAAMoD,EAAS,IAAIM,MAAM,IAAIC,KAAK,GAClCtH,EAAauG,KAAI,SAAApG,GAIb,OAHA4G,EAAO5G,EAAS4D,QAAU,GAC1BgD,EAAO5G,EAAS6D,SAAW,GAC3B+C,EAAO5G,EAAS8D,QAAU,GACnB9D,KAGX,IAOMoH,EAPSJ,EAAoBZ,KAAI,SAACC,EAAUjB,GAC9C,IAAMiC,EAAehB,EAErB,OADAgB,EAAaJ,MAAQL,EAAOxB,EAAQ,GAC7BiC,KAIiBC,MAAK,SAACC,EAAWC,GACzC,OAAID,EAAUN,MAAQO,EAAWP,MACtB,EAEPM,EAAUN,MAAQO,EAAWP,OACrB,EAEL,KAGXF,EAAeK,KAGhB,IAGC,mCACI,8BACKN,EAAYV,KAAI,SAACC,EAAUjB,GACxB,OAAO,cAAC,EAAD,CAA4CzB,SAAU0C,EAAU3C,SAAUnD,EAAMmD,SAAUkD,OAAQP,EAASY,MAAO7B,MAAOA,EAAOuB,SAAUN,EAAS1E,IAAnJ,eAA6B0E,EAAS1E,aCnBlD8F,EAnBoB,SAAClH,GAChC,OACI,qCACI,cAAC,EAAD,CAAiB0C,cAAe1C,EAAM0C,gBACtC,eAAC,IAAD,WACI,cAAC,IAAD,CAAOyE,KAAK,SACRC,QAAS,cAAC,EAAD,CAAgBxB,KAAM5F,EAAM4F,KAAMzC,SAAUnD,EAAMmD,aAE/D,cAAC,IAAD,CAAOgE,KAAK,SACRC,QAAS,cAAC,EAAD,CAAexB,KAAM5F,EAAM4F,KAAMzC,SAAUnD,EAAMmD,aAE9D,cAAC,IAAD,CAAOgE,KAAK,IACRC,QAAS,cAAC,EAAD,CAAcjE,SAAUnD,EAAMmD,oBC0D5CkE,MAxEf,WAEE,IAAMC,EAAWC,cAGjB,EAAwBzE,mBAAS,IAAjC,mBAAO8C,EAAP,KAAa4B,EAAb,KAGMlI,EAAesD,aAAY,SAAAC,GAAK,OAAIA,KAG1C,EAAkCC,mBAAS,MAA3C,mBAAO2E,EAAP,KAAiBC,EAAjB,KAIA,EAAwC5E,mBAAS,CAAEjD,MAAM,EAAO2E,KAAM,KAAtE,mBAAOmD,EAAP,KAAqBC,EAArB,KAEMC,EAAgBC,sBAAW,sBAC/B,4BAAApJ,EAAA,sEAC6BD,IAD7B,OAE8B,kBADtBsJ,EADR,QAGIL,EAAcK,GAEdP,EAAQO,GALZ,2CAQE,IA4BJ,OAzBA9E,qBAAU,WACR4E,MACC,CAACA,IAwBF,qCACGJ,GAAY,qBAAK/F,MAAO,CACvBC,UAAW,SACXqG,MAAO,QACPC,OAAQ,QACRC,QAAS,OACTC,WAAY,UALD,SAOZ,yCAAYV,EAAZ,gCAECA,IAAaE,EAAa9H,MAAQ,cAAC,EAAD,CAAaoB,cA9BpB,SAAC7B,EAAcgJ,GAC9C,IAAMC,EAAYlJ,EAAkBC,EAAcgJ,EAAc9I,GAC3D+I,EAAUxI,MAQb+H,EAAgB,CAAE/H,MAAM,EAAM2E,KAAMpF,IACpCkI,EAAS,UARLe,EAAUvI,eACZwI,OAAOC,MAAM,8BAGbD,OAAOC,MAAM,kCAwBbd,GAAYE,EAAa9H,MAAQ,cAAC,EAAD,CAA4B+F,KAAMA,EAAMzC,SAAUwE,EAAanD,KAAM9B,cAhBjF,WACzBkF,EAAgB,CAAE/H,MAAM,EAAO2E,KAAM,YCrDzCgE,IAASC,OAAO,cAAC,IAAD,CAAUtD,MAAOA,EAAjB,SAAwB,cAAC,IAAD,UAAY,cAAC,EAAD,QAAiCuD,SAASC,eAAe,W","file":"static/js/main.38aa9a75.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"common_row\":\"DisplayEachRow_common_row__3GFVr\",\"imageStyle\":\"DisplayEachRow_imageStyle__3t01m\",\"image_container\":\"DisplayEachRow_image_container__3Nq4n\",\"description\":\"DisplayEachRow_description__3GmqT\",\"position\":\"DisplayEachRow_position__2Nx1_\",\"pos1\":\"DisplayEachRow_pos1__2XyG4\",\"pos2\":\"DisplayEachRow_pos2__12rXc\",\"pos3\":\"DisplayEachRow_pos3__1Eydp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"common_row\":\"DisplayEachItem_common_row__3hS3Z\",\"imageStyle\":\"DisplayEachItem_imageStyle__1l-JW\",\"description\":\"DisplayEachItem_description__2vc6G\",\"position\":\"DisplayEachItem_position__8uyoj\",\"pos1\":\"DisplayEachItem_pos1__3jnNP\",\"pos2\":\"DisplayEachItem_pos2__hyH_Y\",\"pos3\":\"DisplayEachItem_pos3__D0FJ7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonsContainer\":\"ShowPositionButton_buttonsContainer__3k_7e\",\"active\":\"ShowPositionButton_active__uGTUY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formContainer\":\"LoginScreen_formContainer__3TS6K\",\"boxshadow\":\"LoginScreen_boxshadow__3Mjox\",\"form\":\"LoginScreen_form__1L5dU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"common\":\"LoginSuccess_common__1JiYa\"};","import { URL } from \"./magicData\";\r\n\r\n//NOTE: This is a pure JS function for fetching data \r\n\r\nconst fetchData = async () => {\r\n    try {\r\n        const response = await fetch(URL);\r\n        if (!response.ok) {\r\n            throw response.status;\r\n        }\r\n        const result = await response.json();\r\n        return result;\r\n\r\n    } catch (e) {\r\n        console.log();\r\n        return e;\r\n    }\r\n}\r\n\r\nexport default fetchData;","// Data that arent UI dependent\r\n\r\nexport const URL = 'https://raw.githubusercontent.com/syook/react-dishpoll/main/db.json';\r\n\r\n","// NOTE: This function simply checks if the data entered by the user is correct\r\n\r\nconst LoginDetailsCheck = (obtainedUser, obtainedPassword, loginDetails) => {\r\n\r\n    const filteredUser = loginDetails.filter(eachUser => {\r\n        return eachUser.username === obtainedUser;\r\n    })\r\n    if (filteredUser.length === 1) {\r\n        if (filteredUser[0].password === obtainedPassword) {\r\n            return { bool: true, username_wrong: false };\r\n        }\r\n        return { bool: false, username_wrong: false };\r\n    }\r\n\r\n    return { bool: false, username_wrong: true };\r\n\r\n}\r\n\r\nexport default LoginDetailsCheck;","import { useRef } from 'react';\r\nimport classes from './LoginScreen.module.css'\r\n\r\n// NOTE: This is a simple form required to get input from the user for loging in\r\n\r\nconst LoginScreen = (props) => {\r\n\r\n    const inputUser = useRef(null);\r\n    const inputPassword = useRef(null);\r\n\r\n    const onSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        const user = inputUser.current.value;\r\n        const pass = inputPassword.current.value;\r\n        if (user.length === 0 || pass.length === 0) {\r\n            if (user.length === 0) {\r\n                inputUser.current.focus();\r\n            }\r\n            else {\r\n                inputPassword.current.focus();\r\n            }\r\n        }\r\n        else {\r\n            props.submitHandler(user, pass);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={classes.formContainer}>\r\n            <div className={classes.boxshadow}>\r\n                <form className={classes.form} onSubmit={onSubmitHandler.bind(this)}>\r\n                    <h1>Login</h1>\r\n                    <hr />\r\n                    <table>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td><label htmlFor=\"username\" >&nbsp; Username: </label></td>\r\n                                <td><input id=\"username\" ref={inputUser} placeholder=\"Enter username\" required /></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td><label htmlFor=\"password\" >&nbsp; Password: </label>\r\n                                </td>\r\n                                <td><input id=\"password\" ref={inputPassword} type=\"password\" placeholder=\"Enter password\" required /></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td colSpan=\"2\" style={{ textAlign: 'center' }}>\r\n                                    <button type=\"submit\">Login</button>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    <br />\r\n\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginScreen;","import 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport { Nav, Navbar, Container, NavItem, Button } from \"react-bootstrap\";\r\n\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\n// NOTE: I used React bootstrap to declare this Navbar and its tab. \r\n// Nav Link is used in order to change the url based on the destination mentioned by the attribute \"to\"\r\n// URL changing is required in ordered to switch between tabs easily\r\n\r\nconst NavBarComponent = (props) => {\r\n    return (\r\n        <>\r\n            <Navbar bg=\"dark\" variant=\"dark\">\r\n                <Container>\r\n                    <Navbar.Brand><Nav.Link as={Link} to=\"/home\">DishPoll</Nav.Link></Navbar.Brand>\r\n                    <Nav className=\"me-auto\">\r\n                        <NavItem eventkey={1}>\r\n                            <Nav.Link as={Link} to=\"/dishes\">Dish-List</Nav.Link>\r\n                        </NavItem>\r\n                        <NavItem eventkey={2}>\r\n                            <Nav.Link as={Link} to=\"/scores\">Scores</Nav.Link>\r\n                        </NavItem>\r\n                    </Nav>\r\n                    <Button variant=\"outline-danger\" onClick={props.logoutHandler}>Logout</Button>\r\n                </Container>\r\n            </Navbar>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default NavBarComponent;\r\n\r\n// https://reacttraining.com/blog/react-router-v6-pre/\r\n\r\n// https://stackoverflow.com/questions/54843302/reactjs-bootstrap-navbar-and-routing-not-working-together","import { useEffect, useState } from 'react';\r\nimport classes from './DisplayEachItem.module.css';\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\n// NOTE: This component is responsible for rendering each food item row-wise. \r\n\r\nconst DisplayEachItem = (props) => {\r\n\r\n    const loginDetails = useSelector(state => state)\r\n\r\n    const [label, setLabel] = useState(null);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const loggedInUserAllDetails = loginDetails.filter(eachUser => {\r\n            return eachUser.username === props.loggedIn;\r\n        });\r\n        if (props.itemInfo.id === loggedInUserAllDetails[0].first) {\r\n            setLabel(\"1\");\r\n        }\r\n        else if (props.itemInfo.id === loggedInUserAllDetails[0].second) {\r\n            setLabel(\"2\");\r\n        }\r\n        else if (props.itemInfo.id === loggedInUserAllDetails[0].third) {\r\n            setLabel(\"3\");\r\n        }\r\n        else {\r\n            setLabel(null);\r\n        }\r\n    }, [props.itemInfo.id, loginDetails, props.loggedIn])\r\n\r\n    return (\r\n        <div className={classes.common_row}>\r\n            <img src={props.itemInfo.image} alt=\"display pic\" className={classes.imageStyle} />\r\n            <div className={classes.description}>\r\n                <h3>\r\n                    {props.itemInfo.dishName}\r\n                </h3>\r\n                <p>\r\n                    {props.itemInfo.description}\r\n                </p>\r\n            </div>\r\n            <button className={`${classes.position} ${classes[`pos${label}`]} `} onClick={props.button.bind(this, props.itemInfo.id)}>{label ? label : '❌'}\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DisplayEachItem;","import classes from './ShowPositionButton.module.css';\r\n\r\n// NOTE: This component is responsible for displaying the bar below NavBar when the user whats to perform voting\r\n\r\nconst ShowPositionButton = (props) => {\r\n    return (\r\n        <div className={classes.buttonsContainer}>\r\n            <span>\r\n                Select the position to set <i className=\"fas fa-arrow-right\"></i> &nbsp;\r\n            </span>\r\n            <button onClick={props.buttonClick.bind(this, 1)} className={props.currentNumber === 1 ? `${classes.active}` : ''}>1</button>\r\n            <button onClick={props.buttonClick.bind(this, 2)} className={props.currentNumber === 2 ? `${classes.active}` : ''}>2</button>\r\n            <button onClick={props.buttonClick.bind(this, 3)} className={props.currentNumber === 3 ? `${classes.active}` : ''}>3</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ShowPositionButton;","import { createSlice, configureStore } from '@reduxjs/toolkit';\r\n\r\n// NOTE: I used redux toolkit in order to save states. The data isn't persistant though. I decided to keep this application as simple as possible\r\n\r\nlet initialState = [\r\n    {\r\n        id: 1,\r\n        username: 'admin',\r\n        password: 'admin',\r\n        first: 0,\r\n        second: 0,\r\n        third: 0\r\n    },\r\n    {\r\n        id: 2,\r\n        username: 'ronaldo',\r\n        password: 'admin',\r\n        first: 0,\r\n        second: 0,\r\n        third: 0\r\n    },\r\n    {\r\n        id: 3,\r\n        username: 'light',\r\n        password: 'admin',\r\n        first: 0,\r\n        second: 0,\r\n        third: 0\r\n    },\r\n    {\r\n        id: 4,\r\n        username: 'loki',\r\n        password: 'admin',\r\n        first: 0,\r\n        second: 0,\r\n        third: 0\r\n    },\r\n];\r\n\r\nconst dataSlice = createSlice({\r\n    name: 'everyUserData',\r\n    initialState,\r\n    reducers: {\r\n        setPositionHandler(state, action) {\r\n            const index = state.findIndex(eachUser => {\r\n                return eachUser.username === action.payload.loggedIn;\r\n            });\r\n            if (action.payload.activePosition === 1) {\r\n                if (state[index].second === action.payload.id) {\r\n                    state[index].second = 0;\r\n                }\r\n                if (state[index].third === action.payload.id) {\r\n                    state[index].third = 0;\r\n                }\r\n                state[index].first = action.payload.id;\r\n            }\r\n            if (action.payload.activePosition === 2) {\r\n                if (state[index].first === action.payload.id) {\r\n                    state[index].first = 0;\r\n                }\r\n                if (state[index].third === action.payload.id) {\r\n                    state[index].third = 0;\r\n                }\r\n                state[index].second = action.payload.id;\r\n            }\r\n            if (action.payload.activePosition === 3) {\r\n                if (state[index].first === action.payload.id) {\r\n                    state[index].second = 0;\r\n                }\r\n                if (state[index].second === action.payload.id) {\r\n                    state[index].second = 0;\r\n                }\r\n                state[index].third = action.payload.id;\r\n            }\r\n        },\r\n    }\r\n});\r\n\r\n\r\n\r\nexport const dataActions = dataSlice.actions;\r\n\r\n\r\nlet store = configureStore({\r\n    reducer: dataSlice.reducer,\r\n})\r\n\r\n\r\nexport default store;","import { useState } from \"react\";\r\nimport DisplayEachItem from \"./DisplayEachItem/DisplayEachItem\";\r\nimport ShowPositionButton from \"./ShowPositionButtons/ShowPositionButton\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport { dataActions } from \"../../store/storeIndex\";\r\n\r\n// NOTE: This is the section that shows all the Dishes, and employs DisplayEachItem and ShowPositionButton components. \r\n\r\nconst DisplayingData = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [activePosition, setPosition] = useState(0);\r\n\r\n    // NOTE: The below logic is required in order to perform voting\r\n    const positionButtonClickedHandle = (pos) => {\r\n        if (pos === activePosition) {\r\n            setPosition(0);\r\n            return;\r\n        }\r\n        setPosition(pos);\r\n    }\r\n\r\n    const eachItemButtonClickHandle = (id) => {\r\n        if (activePosition === 0) {\r\n            return;\r\n        }\r\n        else {\r\n            // NOTE: Note the useDispatch hook used at line 12. Through that and the logic below, we are able to manipulate redux data. \r\n            dispatch(dataActions.setPositionHandler({\r\n                id,\r\n                loggedIn: props.loggedIn,\r\n                activePosition\r\n            }));\r\n            setPosition(0);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ShowPositionButton buttonClick={positionButtonClickedHandle} currentNumber={activePosition} />\r\n            <div>\r\n                {props.data.map(eachItem => {\r\n                    return <DisplayEachItem key={`item#${eachItem.id}`} itemInfo={eachItem} button={eachItemButtonClickHandle} loggedIn={props.loggedIn} />;\r\n                })}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DisplayingData;","import classes from './LoginSuccess.module.css';\r\n\r\n// NOTE: This is a simple page that simply welcomes the user after successful login\r\n\r\nconst LoginSuccess = (props) => {\r\n    return (\r\n        <div className={classes.common}>\r\n            <h1>\r\n                Hey {props.loggedIn}!\r\n            </h1>\r\n            <h3>\r\n                Lets start voting!\r\n            </h3>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginSuccess;","import { useSelector } from 'react-redux';\r\nimport classes from './DisplayEachRow.module.css';\r\n\r\n\r\n// NOTE: This component is similar to the DisplayEachItem component in DisplayingData folder.\r\n\r\n// Except this gives styling to the row in a required format in the poll-result section\r\n\r\n// NOTE: More to be discussed in ReadMe.md\r\n\r\nconst DisplayEachRow = (props) => {\r\n\r\n    const userData = useSelector(state => state);\r\n\r\n    const getLoggedInData = userData.filter(eachUser => {\r\n        return eachUser.username === props.loggedIn;\r\n    });\r\n\r\n\r\n    return (\r\n        <div className={`${classes.common_row} ${classes[`pos${props.index + 1}`]}`}>\r\n            <div className={classes.image_container}>\r\n\r\n                <img src={props.itemInfo.image} alt=\"display pic\" className={classes.imageStyle} />\r\n\r\n                {(props.idForRef === getLoggedInData[0].first || props.idForRef === getLoggedInData[0].second || props.idForRef === getLoggedInData[0].third) && <span><i className=\"fas fa-user fa-2x\"></i></span>}\r\n            </div>\r\n            <div className={classes.description}>\r\n                <h3>\r\n                    {props.itemInfo.dishName}\r\n                </h3>\r\n                <p>\r\n                    {props.itemInfo.description}\r\n                </p>\r\n            </div>\r\n            <button className={classes.position}>{props.points}\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DisplayEachRow;","import DisplayEachRow from \"./DisplayEachRow/DisplayEachRow\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\n// NOTE: This component is responsible for rendering poll results page. This employs DisplayEachRow component in the same directory.\r\n\r\nconst DisplayResults = (props) => {\r\n\r\n    const loginDetails = useSelector(state => state);\r\n\r\n    const [finalScores, setFinalScores] = useState([]);\r\n\r\n    const dataWithPointsField = props.data.map(eachItem => {\r\n        return { ...eachItem, point: 0 };\r\n    });\r\n    useEffect(() => {\r\n        const points = new Array(31).fill(0);\r\n        loginDetails.map(eachUser => {\r\n            points[eachUser.first] += 30;\r\n            points[eachUser.second] += 20;\r\n            points[eachUser.third] += 10;\r\n            return eachUser;\r\n        });\r\n\r\n        const result = dataWithPointsField.map((eachItem, index) => {\r\n            const updatedField = eachItem;\r\n            updatedField.point = points[index + 1];\r\n            return updatedField;\r\n\r\n        });\r\n\r\n        const sortedResult = result.sort((firstDish, secondDish) => {\r\n            if (firstDish.point < secondDish.point) {\r\n                return 1;\r\n            }\r\n            if (firstDish.point > secondDish.point) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        })\r\n\r\n        setFinalScores(sortedResult);\r\n\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                {finalScores.map((eachItem, index) => {\r\n                    return <DisplayEachRow key={`item#${eachItem.id}`} itemInfo={eachItem} loggedIn={props.loggedIn} points={eachItem.point} index={index} idForRef={eachItem.id} />;\r\n                })}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DisplayResults;","import NavBarComponent from \"./NavBar/NavBarComponent\";\r\n\r\nimport { Route, Routes } from \"react-router-dom\";\r\n\r\nimport DisplayingData from \"./DisplayingData/DisplayingData\";\r\n\r\nimport LoginSuccess from \"./LoginSuccess/LoginSuccess\";\r\n\r\nimport DisplayResult from \"./DisplayResults/DisplayResults\";\r\n\r\n// NOTE: This component is the container of all the sections required to display to a user who is logged in\r\n\r\nconst AfterSuccessfulLoginScreen = (props) => {\r\n    return (\r\n        <>\r\n            <NavBarComponent logoutHandler={props.logoutHandler} />\r\n            <Routes>\r\n                <Route path='dishes'\r\n                    element={<DisplayingData data={props.data} loggedIn={props.loggedIn} />}\r\n                />\r\n                <Route path='scores'\r\n                    element={<DisplayResult data={props.data} loggedIn={props.loggedIn} />}\r\n                />\r\n                <Route path='*'\r\n                    element={<LoginSuccess loggedIn={props.loggedIn} />}\r\n                />\r\n            </Routes>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AfterSuccessfulLoginScreen;","import fetchData from \"./NonReactBasedFunctions/fetchData\";\nimport LoginDetailsCheck from \"./NonReactBasedFunctions/LoginDetailsCheck\";\n\nimport { useCallback, useEffect, useState } from \"react\";\n\nimport LoginScreen from \"./LoginScreen/LoginScreen\";\nimport AfterSuccessfulLoginScreen from \"./AfterSuccessfulLoginScreen/AfterSuccessfulLoginScreen\";\nimport { useSelector } from \"react-redux\";\nimport { useNavigate } from 'react-router-dom';\n\nfunction App() {\n\n  const navigate = useNavigate();\n\n  // NOTE: Data received from the API is stored in data \n  const [data, setData] = useState([]);\n\n  // NOTE: To get all user data\n  const loginDetails = useSelector(state => state);\n\n  // NOTE: The gotError state gets error if thrown at the time of data fetching\n  const [gotError, setErrorState] = useState(null);\n\n  // NOTE: This state is required to get the state of the userlogin and username\n\n  const [loggedInUser, setLoggedInUser] = useState({ bool: false, name: '' });\n\n  const fetchDishData = useCallback(\n    async () => {\n      const receivedData = await fetchData();\n      if (typeof receivedData === 'number') {\n        setErrorState(receivedData);\n      } else {\n        setData(receivedData);\n      }\n    }\n    , []\n  );\n\n  useEffect(() => {\n    fetchDishData();\n  }, [fetchDishData]);\n\n  // NOTE: When the login form is properly filled, the below function is triggered\n\n  const onSubmitCheckDataHandler = (obtainedUser, obtainedPass) => {\n    const checkData = LoginDetailsCheck(obtainedUser, obtainedPass, loginDetails);\n    if (!checkData.bool) {\n      if (checkData.username_wrong) {\n        window.alert(\"Please check your username\");\n      }\n      else {\n        window.alert(\"Please check your password\");\n      }\n    } else {\n      setLoggedInUser({ bool: true, name: obtainedUser });\n      navigate('/home');\n    }\n  }\n\n  const logoutClickHandler = () => {\n    setLoggedInUser({ bool: false, name: '' });\n  };\n\n  return (\n    <>\n      {gotError && <div style={{\n        textAlign: 'center',\n        width: \"100vw\",\n        height: \"100vh\",\n        display: 'flex',\n        alignItems: 'center'\n      }}\n      ><h1>Error: {gotError} Please try again later</h1></div>}\n\n      {!gotError && !loggedInUser.bool && <LoginScreen submitHandler={onSubmitCheckDataHandler} />}\n      {!gotError && loggedInUser.bool && <AfterSuccessfulLoginScreen data={data} loggedIn={loggedInUser.name} logoutHandler={logoutClickHandler} />}\n    </>\n\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './store/storeIndex';\n\nReactDOM.render(<Provider store={store}><HashRouter><App /></HashRouter></Provider>, document.getElementById('root'));\n"],"sourceRoot":""}